<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:p="http://www.springframework.org/schema/p"
	xmlns:context="http://www.springframework.org/schema/context"
	xmlns:mvc="http://www.springframework.org/schema/mvc"
	xsi:schemaLocation="http://www.springframework.org/schema/beans    
                            http://www.springframework.org/schema/beans/spring-beans-3.1.xsd    
                            http://www.springframework.org/schema/context    
                            http://www.springframework.org/schema/context/spring-context-3.1.xsd    
                            http://www.springframework.org/schema/mvc    
                            http://www.springframework.org/schema/mvc/spring-mvc-4.0.xsd">
	<!-- 自动扫描该包，使SpringMVC认为包下用了@controller注解的类是控制器 -->
	<context:component-scan base-package="cn.com.ttblog.ssmbootstrap_table.controller" />

   	<bean id="logBeanPocessor" class="cn.com.ttblog.ssmbootstrap_table.util.TestBeanPostProcessor" lazy-init="false" />
   
	<!-- 多视图配置,内容协商视图解析 -->
	<bean
		class="org.springframework.web.servlet.view.ContentNegotiatingViewResolver">
		<property name="favorParameter" value="true" />
		<property name="favorPathExtension" value="true" />
		<property name="ignoreAcceptHeader" value="true" />
		<property name="defaultContentType" value="text/html" />
		<property name="mediaTypes">
			<map>
				<entry key="json" value="application/json" />
				<entry key="xml" value="application/xml" />
				<entry key="xls" value="application/vnd.ms-excel" />
			</map>
		</property>
		<property name="defaultViews">
			<list>
				<bean
					class="org.springframework.web.servlet.view.json.MappingJacksonJsonView"></bean>
				<bean class="org.springframework.web.servlet.view.xml.MarshallingView">
					<constructor-arg>
						<bean class="org.springframework.oxm.jaxb.Jaxb2Marshaller">
							<property name="classesToBeBound">
								<list>
									<value>cn.com.ttblog.ssmbootstrap_table.model.User</value>
								</list>
							</property>
						</bean>
					</constructor-arg>
				</bean>
			</list>
		</property>
	</bean>
	<!-- 上面没匹配到则会使用这个视图解析器 -->
	<bean
		class="org.springframework.web.servlet.view.InternalResourceViewResolver">
		<property name="prefix" value="/" />
		<property name="suffix" value=".jsp" />
		<property name="viewClass"
			value="org.springframework.web.servlet.view.JstlView" />
	</bean>
	<!-- <bean class="com.wonders.stpt.bid.controller.JXLExcelView"/> -->
	<!-- 启动SpringMVC的注解功能，完成请求和注解POJO的映射,使 Spring MVC 支持 JSR303 validator via 
		@Valid, and also bind your properties file -->
	<mvc:annotation-driven />
	<!-- 设定全局的validator -->
	<!-- <mvc:annotation-driven validator="" /> -->
	<!-- 静态资源等，默认行为 -->
	<mvc:default-servlet-handler />
	<mvc:view-controller path="/" view-name="index.html" />
	<!-- <bean name="xStreamMarshallingView" id="xStreamMarshallingView" class="org.springframework.web.servlet.view.xml.MarshallingView"> 
		<property name="marshaller"> <bean class="org.springframework.oxm.xstream.XStreamMarshaller"> 
		<property name="autodetectAnnotations" value="true" /> <property name="aliases"> 
		<map> Account这个类的别名就变成了myBeans，那么转换后的xml中就是myBeans <entry key="u" value="cn.com.ttblog.ssmbootstrap_table.model.User" 
		/> </map> </property> 基本属性别名 <property name="fieldAliases"> <map> Account中的brithday这个属性 
		<entry key="cn.com.ttblog.ssmbootstrap_table.model.User.age" value="年龄" /> 
		</map> </property> </bean> </property> </bean> -->
	<!-- 配置文件上传，如果没有使用文件上传可以不用配置，当然如果不配，那么配置文件中也不必引入上传组件包 -->
	<bean id="multipartResolver"
		class="org.springframework.web.multipart.commons.CommonsMultipartResolver">
		<!-- 默认编码 -->
		<property name="defaultEncoding" value="utf-8" />
		<!-- 文件大小最大值 -->
		<property name="maxUploadSize" value="10485760000" />
		<!-- 内存中的最大值 -->
		<property name="maxInMemorySize" value="40960" />
	</bean>

	<!-- 全局异常配置,也可通过使用@ControllerAdvice注解的类处理全局异常 -->
	<!-- <bean id="exceptionResolver" class="org.springframework.web.servlet.handler.SimpleMappingExceptionResolver"> 
		<property name="exceptionMappings"> <props> <prop key="java.lang.Exception">500</prop> 
		<prop key="java.lang.Throwable">500</prop> <prop key="BindException">500</prop> 
		</props> </property> <property name="statusCodes"> <props> <prop key="500">500</prop> 
		</props> </property> 设置日志输出级别，不定义则默认不输出警告等错误日志信息 <property name="warnLogCategory" 
		value="WARN"></property> 默认错误页面，当找不到上面mappings中指定的异常对应视图时，使用本默认配置 <property 
		name="defaultErrorView" value="500"></property> 默认HTTP状态码 <property name="defaultStatusCode" 
		value="500"></property> </bean> -->

	<!-- bind i18n messages properties,this just setting zh_CN message -->
	<bean id="messageSource"
		class="org.springframework.context.support.ReloadableResourceBundleMessageSource">
		<property name="useCodeAsDefaultMessage" value="false" />
		<property name="defaultEncoding" value="UTF-8" />
		<property name="fallbackToSystemLocale" value="true" />
		<property name="basenames">
			<list>
				<value>classpath:messages.properties</value>
			</list>
		</property>
	</bean>

	<bean id="validator"
		class="org.springframework.validation.beanvalidation.LocalValidatorFactoryBean">
		<property name="providerClass" value="org.hibernate.validator.HibernateValidator" />
		<property name="validationMessageSource" ref="messageSource" />
	</bean>

	<mvc:interceptors>
		<bean class="cn.com.ttblog.ssmbootstrap_table.interceptor.SpringMVCInterceptor" />
		<!-- 如果不配置或/*,将拦截所有的Controller 定义在mvc:interceptor下面的表示是对特定的请求才进行拦截的 -->
		<!-- <mvc:interceptor>
			<mvc:mapping path="/test/number.do" />
			<bean class="com.host.app.web.interceptor.LoginInterceptor" />
		</mvc:interceptor> -->
	</mvc:interceptors>
</beans>  